plugins {
    id 'java'
    id 'maven'
    id 'idea'
    id 'signing'
    id "org.ajoberstar.grgit" version "4.0.1"
    id 'com.github.sherter.google-java-format' version '0.8'
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()

    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

googleJavaFormat {
    options style: 'AOSP'
    source = sourceSets*.allJava
    include '**/*.java'
    exclude '**/temp/*.java'
}

verifyGoogleJavaFormat {
    source = sourceSets*.allJava
    include '**/*.java'
    exclude '**/temp/*.java'
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.29'

    // compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'
    //compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
    //compile group: 'org.apache.commons', name:  'commons-collections4', version: '4.0'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
}

archivesBaseName = 'solcJ'
group = 'org.fisco-bcos'
version '1.0-SNAPSHOT'

configurations {
    resultArchives
}

install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "solcJ"
        pom.groupId = "org.fisco-bcos"
    }
}

jar {
    destinationDir file('dist/apps')
    archiveName project.name + '-' + project.version + '.jar'
    exclude '**/*.xml'
    exclude '**/*.properties'
    // exclude '**/*.crt'
    // exclude '**/*.key'

    manifest {
        try {
            def repo = grgit.open()
            if (repo != null) {
                def user = System.getProperty("user.name")
                def date = new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
                def branch = repo.branch.getCurrent().getName()
                def commit = repo.head().getAbbreviatedId(40)

                attributes(["Built-By"                : user,
                            "Implementation-Timestamp": date,
                            "Git-Branch"              : branch,
                            "Git-Commit"              : commit
                ])

                logger.info("  Commit : ")
                logger.info("  => user: {}", user)
                logger.info("  => date: {}", date)
                logger.info("  => branch: {}", branch)
                logger.info("  => commit: {}", commit)
            }
        } catch (Exception e) {
            logger.warn(' .git not exist, cannot found commit info , e: {}', e)
        }
    } from sourceSets.main.output

    doLast {
        copy {
            from configurations.runtime
            into 'dist/lib'
        }

        copy {
            from file('src/main/resources/log4j.properties')
            into 'dist/conf'
        }
    }
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

// for upload to maven
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
    resultArchives file: file('dist/apps/' + project.name + '-' + project.version + '.jar')
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

// Additional attribute definition
ext {
    ossrhUsername="xxx"
    ossrhPassword="xxx"

    sonatypeUsername="xxx"
    sonatypePassword="xxx"
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'fisco-bcos'
                packaging 'jar'
                description 'fisco-bcos solcJ'
                url 'http://www.fisco-bcos.org'

                scm {
                    url 'https://github.com/FISCO-BCOS/solcJ.git'
                    connection 'https://github.com/FISCO-BCOS/solcJ.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}



